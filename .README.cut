
### Why 

(or how am studiously not mentioning a certain package we all know):
    I dont like most of the build tools that are popular with
    NPM. They do not hit the right abstraction point. 
    They are extremely young for a system that is extremely 
    complex and ever-changing. Its best to use the tried and
    true. Browersify, is a huge exception in that it knows its
    place in life. Bundle lots of little files into one big one.
    Just like, cc or gcc of C days all it did was take small files
    and make one big one. The solution: Make! In fact how could you
    keep making all these little files into one big one without a whole
    lotsa typing? With a Makefile! But wait! It has to do so much more.
    Lint checking, CSS, templating, production/devolpment configs.
    Oh yes, `make` is your man. In fact, it was designed for it.

What (or the glory of the kingdom):
    * Only builds what it needs to.
        `make` by design keeps track of modification times
        of files. It's rule system will only rebuild what is
        necissary.
    * Isolates configurations to directories.
        Global configurations do not always represent the reality
        of ad-hoc packages. In JS this the most pronounced since
        the spagetti code days of 80's C.
    * Adaptable to changing toolchains.
        `make` does not need 'package-tranformation' that the
        devolpers refuse to do and so on.
        You take out the old cruft; Put in the new stuff;
        Same size file.
    * Not dependent on the language its built on.
        `make` handles any language. If you loved a templating
        system from Python or Ruby it would be huge overhead to
        try to incorporate it into a Javascript build system.
        One rule change and your up and running.
    * Not dependent on me. Self actualize yourself.
        And I think this is huge. If you dont like it fork it and make it
        your own. I want you to. Take charge of your trans-compilation.
    * Isn't that what old great-grandpa used to use to compile stuff?
        Yes. Make predates C. Its resilance is a testimony to its
        usefullness.



```
  $ node
  > require('makefile-for-js-example')
  { default: [Function: klassy] }
  > 
```

